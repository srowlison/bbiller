//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BitcoinATM.DCExchange {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Margin", Namespace="http://schemas.datacontract.org/2004/07/DC.Common.Models")]
    [System.SerializableAttribute()]
    public partial class Margin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Buy {
            get {
                return this.BuyField;
            }
            set {
                if ((this.BuyField.Equals(value) != true)) {
                    this.BuyField = value;
                    this.RaisePropertyChanged("Buy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Sell {
            get {
                return this.SellField;
            }
            set {
                if ((this.SellField.Equals(value) != true)) {
                    this.SellField = value;
                    this.RaisePropertyChanged("Sell");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://payment.diamondcircle.net/v1", ConfigurationName="DCExchange.IExchange")]
    public interface IExchange {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://payment.diamondcircle.net/v1/IExchange/GetSpotPrice", ReplyAction="https://payment.diamondcircle.net/v1/IExchange/GetSpotPriceResponse")]
        decimal GetSpotPrice(string currencyCode, decimal amount, int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://payment.diamondcircle.net/v1/IExchange/GetSpotPrice", ReplyAction="https://payment.diamondcircle.net/v1/IExchange/GetSpotPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetSpotPriceAsync(string currencyCode, decimal amount, int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://payment.diamondcircle.net/v1/IExchange/GetMargin", ReplyAction="https://payment.diamondcircle.net/v1/IExchange/GetMarginResponse")]
        BitcoinATM.DCExchange.Margin GetMargin(string currencyCode, int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://payment.diamondcircle.net/v1/IExchange/GetMargin", ReplyAction="https://payment.diamondcircle.net/v1/IExchange/GetMarginResponse")]
        System.Threading.Tasks.Task<BitcoinATM.DCExchange.Margin> GetMarginAsync(string currencyCode, int terminalId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExchangeChannel : BitcoinATM.DCExchange.IExchange, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExchangeClient : System.ServiceModel.ClientBase<BitcoinATM.DCExchange.IExchange>, BitcoinATM.DCExchange.IExchange {
        
        public ExchangeClient() {
        }
        
        public ExchangeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExchangeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal GetSpotPrice(string currencyCode, decimal amount, int terminalId) {
            return base.Channel.GetSpotPrice(currencyCode, amount, terminalId);
        }
        
        public System.Threading.Tasks.Task<decimal> GetSpotPriceAsync(string currencyCode, decimal amount, int terminalId) {
            return base.Channel.GetSpotPriceAsync(currencyCode, amount, terminalId);
        }
        
        public BitcoinATM.DCExchange.Margin GetMargin(string currencyCode, int terminalId) {
            return base.Channel.GetMargin(currencyCode, terminalId);
        }
        
        public System.Threading.Tasks.Task<BitcoinATM.DCExchange.Margin> GetMarginAsync(string currencyCode, int terminalId) {
            return base.Channel.GetMarginAsync(currencyCode, terminalId);
        }
    }
}
